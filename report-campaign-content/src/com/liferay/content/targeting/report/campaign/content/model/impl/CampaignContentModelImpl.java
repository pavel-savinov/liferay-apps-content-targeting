/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.content.targeting.report.campaign.content.model.impl;

import com.liferay.content.targeting.report.campaign.content.model.CampaignContent;
import com.liferay.content.targeting.report.campaign.content.model.CampaignContentModel;
import com.liferay.content.targeting.report.campaign.content.model.CampaignContentSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CampaignContent service. Represents a row in the &quot;CT_CCR_CampaignContent&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.content.targeting.report.campaign.content.model.CampaignContentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CampaignContentImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CampaignContentImpl
 * @see com.liferay.content.targeting.report.campaign.content.model.CampaignContent
 * @see com.liferay.content.targeting.report.campaign.content.model.CampaignContentModel
 * @generated
 */
@JSON(strict = true)
public class CampaignContentModelImpl extends BaseModelImpl<CampaignContent>
	implements CampaignContentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a campaign content model instance should use the {@link com.liferay.content.targeting.report.campaign.content.model.CampaignContent} interface instead.
	 */
	public static final String TABLE_NAME = "CT_CCR_CampaignContent";
	public static final Object[][] TABLE_COLUMNS = {
			{ "campaignContentId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "campaignId", Types.BIGINT },
			{ "className", Types.VARCHAR },
			{ "classPK", Types.BIGINT },
			{ "eventType", Types.VARCHAR },
			{ "count", Types.INTEGER },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table CT_CCR_CampaignContent (campaignContentId LONG not null primary key,companyId LONG,campaignId LONG,className VARCHAR(75) null,classPK LONG,eventType VARCHAR(75) null,count INTEGER,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table CT_CCR_CampaignContent";
	public static final String ORDER_BY_JPQL = " ORDER BY campaignContent.modifiedDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY CT_CCR_CampaignContent.modifiedDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.content.targeting.report.campaign.content.model.CampaignContent"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.content.targeting.report.campaign.content.model.CampaignContent"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.content.targeting.report.campaign.content.model.CampaignContent"),
			true);
	public static long CAMPAIGNID_COLUMN_BITMASK = 1L;
	public static long CLASSNAME_COLUMN_BITMASK = 2L;
	public static long CLASSPK_COLUMN_BITMASK = 4L;
	public static long EVENTTYPE_COLUMN_BITMASK = 8L;
	public static long MODIFIEDDATE_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CampaignContent toModel(CampaignContentSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CampaignContent model = new CampaignContentImpl();

		model.setCampaignContentId(soapModel.getCampaignContentId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCampaignId(soapModel.getCampaignId());
		model.setClassName(soapModel.getClassName());
		model.setClassPK(soapModel.getClassPK());
		model.setEventType(soapModel.getEventType());
		model.setCount(soapModel.getCount());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CampaignContent> toModels(
		CampaignContentSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CampaignContent> models = new ArrayList<CampaignContent>(soapModels.length);

		for (CampaignContentSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.content.targeting.report.campaign.content.model.CampaignContent"));

	public CampaignContentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _campaignContentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCampaignContentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _campaignContentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CampaignContent.class;
	}

	@Override
	public String getModelClassName() {
		return CampaignContent.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("campaignContentId", getCampaignContentId());
		attributes.put("companyId", getCompanyId());
		attributes.put("campaignId", getCampaignId());
		attributes.put("className", getClassName());
		attributes.put("classPK", getClassPK());
		attributes.put("eventType", getEventType());
		attributes.put("count", getCount());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long campaignContentId = (Long)attributes.get("campaignContentId");

		if (campaignContentId != null) {
			setCampaignContentId(campaignContentId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long campaignId = (Long)attributes.get("campaignId");

		if (campaignId != null) {
			setCampaignId(campaignId);
		}

		String className = (String)attributes.get("className");

		if (className != null) {
			setClassName(className);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		String eventType = (String)attributes.get("eventType");

		if (eventType != null) {
			setEventType(eventType);
		}

		Integer count = (Integer)attributes.get("count");

		if (count != null) {
			setCount(count);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getCampaignContentId() {
		return _campaignContentId;
	}

	@Override
	public void setCampaignContentId(long campaignContentId) {
		_campaignContentId = campaignContentId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getCampaignId() {
		return _campaignId;
	}

	@Override
	public void setCampaignId(long campaignId) {
		_columnBitmask |= CAMPAIGNID_COLUMN_BITMASK;

		if (!_setOriginalCampaignId) {
			_setOriginalCampaignId = true;

			_originalCampaignId = _campaignId;
		}

		_campaignId = campaignId;
	}

	public long getOriginalCampaignId() {
		return _originalCampaignId;
	}

	@JSON
	@Override
	public String getClassName() {
		if (_className == null) {
			return StringPool.BLANK;
		}
		else {
			return _className;
		}
	}

	@Override
	public void setClassName(String className) {
		_columnBitmask |= CLASSNAME_COLUMN_BITMASK;

		if (_originalClassName == null) {
			_originalClassName = _className;
		}

		_className = className;
	}

	public String getOriginalClassName() {
		return GetterUtil.getString(_originalClassName);
	}

	@JSON
	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_columnBitmask |= CLASSPK_COLUMN_BITMASK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = _classPK;
		}

		_classPK = classPK;
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	@JSON
	@Override
	public String getEventType() {
		if (_eventType == null) {
			return StringPool.BLANK;
		}
		else {
			return _eventType;
		}
	}

	@Override
	public void setEventType(String eventType) {
		_columnBitmask |= EVENTTYPE_COLUMN_BITMASK;

		if (_originalEventType == null) {
			_originalEventType = _eventType;
		}

		_eventType = eventType;
	}

	public String getOriginalEventType() {
		return GetterUtil.getString(_originalEventType);
	}

	@JSON
	@Override
	public int getCount() {
		return _count;
	}

	@Override
	public void setCount(int count) {
		_count = count;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_columnBitmask = -1L;

		if (_originalModifiedDate == null) {
			_originalModifiedDate = _modifiedDate;
		}

		_modifiedDate = modifiedDate;
	}

	public Date getOriginalModifiedDate() {
		return _originalModifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CampaignContent.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CampaignContent toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CampaignContent)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CampaignContentImpl campaignContentImpl = new CampaignContentImpl();

		campaignContentImpl.setCampaignContentId(getCampaignContentId());
		campaignContentImpl.setCompanyId(getCompanyId());
		campaignContentImpl.setCampaignId(getCampaignId());
		campaignContentImpl.setClassName(getClassName());
		campaignContentImpl.setClassPK(getClassPK());
		campaignContentImpl.setEventType(getEventType());
		campaignContentImpl.setCount(getCount());
		campaignContentImpl.setModifiedDate(getModifiedDate());

		campaignContentImpl.resetOriginalValues();

		return campaignContentImpl;
	}

	@Override
	public int compareTo(CampaignContent campaignContent) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedDate(),
				campaignContent.getModifiedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CampaignContent)) {
			return false;
		}

		CampaignContent campaignContent = (CampaignContent)obj;

		long primaryKey = campaignContent.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CampaignContentModelImpl campaignContentModelImpl = this;

		campaignContentModelImpl._originalCampaignId = campaignContentModelImpl._campaignId;

		campaignContentModelImpl._setOriginalCampaignId = false;

		campaignContentModelImpl._originalClassName = campaignContentModelImpl._className;

		campaignContentModelImpl._originalClassPK = campaignContentModelImpl._classPK;

		campaignContentModelImpl._setOriginalClassPK = false;

		campaignContentModelImpl._originalEventType = campaignContentModelImpl._eventType;

		campaignContentModelImpl._originalModifiedDate = campaignContentModelImpl._modifiedDate;

		campaignContentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CampaignContent> toCacheModel() {
		CampaignContentCacheModel campaignContentCacheModel = new CampaignContentCacheModel();

		campaignContentCacheModel.campaignContentId = getCampaignContentId();

		campaignContentCacheModel.companyId = getCompanyId();

		campaignContentCacheModel.campaignId = getCampaignId();

		campaignContentCacheModel.className = getClassName();

		String className = campaignContentCacheModel.className;

		if ((className != null) && (className.length() == 0)) {
			campaignContentCacheModel.className = null;
		}

		campaignContentCacheModel.classPK = getClassPK();

		campaignContentCacheModel.eventType = getEventType();

		String eventType = campaignContentCacheModel.eventType;

		if ((eventType != null) && (eventType.length() == 0)) {
			campaignContentCacheModel.eventType = null;
		}

		campaignContentCacheModel.count = getCount();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			campaignContentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			campaignContentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return campaignContentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{campaignContentId=");
		sb.append(getCampaignContentId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", campaignId=");
		sb.append(getCampaignId());
		sb.append(", className=");
		sb.append(getClassName());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", eventType=");
		sb.append(getEventType());
		sb.append(", count=");
		sb.append(getCount());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append(
			"com.liferay.content.targeting.report.campaign.content.model.CampaignContent");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>campaignContentId</column-name><column-value><![CDATA[");
		sb.append(getCampaignContentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>campaignId</column-name><column-value><![CDATA[");
		sb.append(getCampaignId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>className</column-name><column-value><![CDATA[");
		sb.append(getClassName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eventType</column-name><column-value><![CDATA[");
		sb.append(getEventType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>count</column-name><column-value><![CDATA[");
		sb.append(getCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CampaignContent.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CampaignContent.class
		};
	private long _campaignContentId;
	private long _companyId;
	private long _campaignId;
	private long _originalCampaignId;
	private boolean _setOriginalCampaignId;
	private String _className;
	private String _originalClassName;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private String _eventType;
	private String _originalEventType;
	private int _count;
	private Date _modifiedDate;
	private Date _originalModifiedDate;
	private long _columnBitmask;
	private CampaignContent _escapedModel;
}